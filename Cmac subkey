#include <stdio.h>
#include <stdint.h>

void generateSubkeys(uint8_t key[], uint8_t subkey1[], uint8_t subkey2[], int block_size) {
    uint8_t const_Rb_64 = 0x1B;
    uint8_t const_Rb_128 = 0x87;

    for (int i = 0; i < block_size / 8; i++) {
        subkey1[i] = key[i] << 1;
        if (i < block_size / 8 - 1 && (key[i + 1] & 0x80) == 0x80) {
            subkey1[i] |= 0x01;
        }
    }

    if ((key[0] & 0x80) == 0x80) {
        if (block_size == 64) {
            subkey1[block_size / 8 - 1] ^= const_Rb_64;
        } else if (block_size == 128) {
            subkey1[block_size / 8 - 1] ^= const_Rb_128;
        }
    }

    for (int i = 0; i < block_size / 8; i++) {
        subkey2[i] = subkey1[i] << 1;
        if (i < block_size / 8 - 1 && (subkey1[i + 1] & 0x80) == 0x80) {
            subkey2[i] |= 0x01;
        }
    }

    if ((subkey1[0] & 0x80) == 0x80) {
        if (block_size == 64) {
            subkey2[block_size / 8 - 1] ^= const_Rb_64;
        } else if (block_size == 128) {
            subkey2[block_size / 8 - 1] ^= const_Rb_128;
        }
    }
}

void printBytes(uint8_t array[], int size) {
    for (int i = 0; i < size; i++) {
        printf("%02x ", array[i]);
    }
    printf("\n");
}

int main() {
    int block_size = 128;
    uint8_t key[block_size / 8];
    uint8_t subkey1[block_size / 8];
    uint8_t subkey2[block_size / 8];

    for (int i = 0; i < block_size / 8; i++) {
        key[i] = 0xAA;
    }

    generateSubkeys(key, subkey1, subkey2, block_size);

    printf("Subkey 1: ");
    printBytes(subkey1, block_size / 8);

    printf("Subkey 2: ");
    printBytes(subkey2, block_size / 8);

    return 0;
}
